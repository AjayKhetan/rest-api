spring.application.name=inventories
server.port=8080
# postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/inventories
spring.datasource.username=admin
spring.datasource.password=admin
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

dsn=https://9ffe2965c3034768a1c6e6524d2f1c70@sentry.io/1254226

# user authenticate
username = InventoriesApp
userpass = Password

# admin
useradmin = admin
adminpass = admin

# Local Kafka
spring.kafka.bootstrap-servers=localhost:9092

# Cloud Karafka
#spring.kafka.bootstrap-servers=velomobile-03.srvs.cloudkafka.com:9094,velomobile-02.srvs.cloudkafka.com:9094,velomobile-01.srvs.cloudkafka.com:9094
#spring.kafka.properties.security.protocol=SASL_SSL
#spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="4igc0qsg" password="8sW0Qke5_P72AY9CbIuJisai8WQLd4gn";
spring.kafka.consumer.group-id=4igc0qsg-inventories

spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=sample.kafka

#cloudkarafka.topic=${CLOUDKARAFKA_USERNAME}-default
inventories.kafka.post.brand=4igc0qsg-inventories.kafka.post.brand
inventories.kafka.put.brand=4igc0qsg-inventories.kafka.put.brand
inventories.kafka.patch.brand=4igc0qsg-inventories.kafka.patch.brand
inventories.kafka.post.brand.manufacturer=4igc0qsg-inventories.kafka.post.brand.manufacturer