#spring.profiles.active=dev
spring.application.name=inventories
server.port=8080
# postgres
spring.datasource.url=${DATABASE_URL}
#spring.datasource.username=admin
#spring.datasource.password=admin
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

dsn=https://9ffe2965c3034768a1c6e6524d2f1c70@sentry.io/1254226

# user authenticate
username = InventoriesApp
userpass = Password

# admin
useradmin = admin
adminpass = admin

# Cloud Karafka
spring.kafka.bootstrap-servers=${CLOUDKARAFKA_BROKERS}
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${CLOUDKARAFKA_USERNAME}" password="${CLOUDKARAFKA_PASSWORD}";
spring.kafka.consumer.group-id=${CLOUDKARAFKA_USERNAME}-inventories

spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=sample.kafka

#cloudkarafka.topic=${CLOUDKARAFKA_USERNAME}-default
inventories.kafka.post.brand=${CLOUDKARAFKA_USERNAME}-inventories.kafka.post.brand
inventories.kafka.put.brand=${CLOUDKARAFKA_USERNAME}-inventories.kafka.put.brand
inventories.kafka.patch.brand=${CLOUDKARAFKA_USERNAME}-inventories.kafka.patch.brand
inventories.kafka.post.brand.manufacturer=${CLOUDKARAFKA_USERNAME}-inventories.kafka.post.brand.manufacturer